// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGymProgress.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyGymProgressApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240519052033_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyGymProgress.Data.Models.TrainingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("WorkoutDuration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkoutNotes")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrainingSessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 5, 19, 5, 20, 33, 263, DateTimeKind.Utc).AddTicks(5720),
                            Notes = "Full body workout focusing on form",
                            WorkoutDuration = "1 hour",
                            WorkoutName = "Full Body Routine",
                            WorkoutNotes = "Felt good today, no pain."
                        });
                });

            modelBuilder.Entity("backend.Data.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Distance")
                        .HasColumnType("numeric");

                    b.Property<string>("DistanceUnit")
                        .HasColumnType("text");

                    b.Property<string>("ExerciseName")
                        .HasColumnType("text");

                    b.Property<int?>("RPE")
                        .HasColumnType("integer");

                    b.Property<int?>("Reps")
                        .HasColumnType("integer");

                    b.Property<int?>("Seconds")
                        .HasColumnType("integer");

                    b.Property<int>("SetOrder")
                        .HasColumnType("integer");

                    b.Property<int>("TrainingSessionId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric");

                    b.Property<string>("WeightUnit")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Distance = 0m,
                            DistanceUnit = "m",
                            ExerciseName = "Deadlift",
                            RPE = 8,
                            Reps = 5,
                            Seconds = 0,
                            SetOrder = 1,
                            TrainingSessionId = 1,
                            Weight = 120m,
                            WeightUnit = "kg"
                        },
                        new
                        {
                            Id = 2,
                            Distance = 0m,
                            DistanceUnit = "m",
                            ExerciseName = "Squat",
                            RPE = 8,
                            Reps = 5,
                            Seconds = 0,
                            SetOrder = 2,
                            TrainingSessionId = 1,
                            Weight = 100m,
                            WeightUnit = "kg"
                        });
                });

            modelBuilder.Entity("backend.Data.Models.Exercise", b =>
                {
                    b.HasOne("MyGymProgress.Data.Models.TrainingSession", "TrainingSession")
                        .WithMany("Exercises")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingSession");
                });

            modelBuilder.Entity("MyGymProgress.Data.Models.TrainingSession", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
